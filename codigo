#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#define TAM 100000

struct hash{
    int chave;
    char livre;
};
struct hash* criaHash(struct hash* vet[]){
    for(int i=0; i<TAM;i++){//vetor com posicao null
        vet[i]->livre='L';
    }
    return vet;
}

int hashing(int chave){
    return chave % TAM;
}
int insereHash(int chave, struct hash tabela[])
{
    int pos = hashing(chave);
    int i=0;
    while((i < TAM) &&(tabela[(pos+i)%TAM].livre != 'L'))
        i=i+1;
    if(i < TAM)
    {
        tabela[(pos+i)%TAM].chave = chave;
        tabela[(pos+i)%TAM].livre = 'O';
    }
    else
        printf("Tabela cheia \n");
}
int Buscar(struct hash tabela[], int valor)
{
    int pos = hashing(valor);
    int i=0;
    while((i < TAM) &&(tabela[(pos+i)%TAM].livre != 'L') &&(tabela[(pos+i)%TAM].chave != valor))
        i=i+1;
    if(tabela[(pos+i)%TAM].chave == valor){
        return (pos=i)%TAM;
    }
    else
        printf("Elemento nao encontrado \n");
    return 0;
}


void mostraHash (struct hash tabela[])
{
    int i;
    for (i=0;i < TAM;i++)
    {
        if(tabela[i].livre == 'O')
        {
            printf("Entrada %d \n", tabela[i].chave);
        }
    }
}

int main()
{
    struct hash tabela[TAM];
    int op, num;
    double start, stop, elapsed;
    for(int i=0; i<TAM;i++){//vetor com posicao null
        tabela[i].livre='L';
    }
    do{
        printf("Menu de opcao \n");
        printf("Digite 1 para Inserir \n");
        printf("Digite 2 para Buscar elemento \n");
        printf("Digite 3 para mostrar tabela \n");
        printf("Digite 4 para sair \n");
        scanf("%d", &op);
        switch (op)
        {
            case 1:
                printf("Digite a quantidade de elementos a inserir \n");
                scanf("%d", &num);
                start = (double) clock() / CLOCKS_PER_SEC;
                for(int i=0; i < num;i++){
                    int v=rand();
                    insereHash(v,tabela);
                }
                stop = (double) clock() / CLOCKS_PER_SEC;
                elapsed = stop - start;
                printf("Tempo total em segundos da insercao: %f\n", elapsed);
                break;
            case 2:
                printf("Digite o elementos a ser buscado \n");
                scanf("%d", &num);
                start = (double) clock() / CLOCKS_PER_SEC;
                Buscar(tabela, num);
                stop = (double) clock() / CLOCKS_PER_SEC;
                elapsed = stop - start;
                printf("Tempo total em segundos da busca: %f\n", elapsed);
                break;
            case 3:
                mostraHash(tabela);
                break;
            case 4:
                printf("Saindo...\n");
                break;
            default:
                printf("Opcao Invalida");
                break;
        }
    }while (op != 4);

    return 0;
}
